"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var index_1 = require('../../shared/services/index');
var SalesComponent = (function () {
    function SalesComponent() {
    }
    SalesComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'yeah-sales',
            templateUrl: 'sales.component.html',
            styleUrls: ['company.style.css'],
            directives: [router_1.ROUTER_DIRECTIVES],
            providers: [index_1.AuthService, index_1.AdminService, index_1.UserDataService]
        }), 
        __metadata('design:paramtypes', [])
    ], SalesComponent);
    return SalesComponent;
}());
exports.SalesComponent = SalesComponent;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC9jb21wYW55L3NhbGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEscUJBQWtDLGVBQWUsQ0FBQyxDQUFBO0FBQ2xELHVCQUE2QyxpQkFBaUIsQ0FBQyxDQUFBO0FBSS9ELHNCQUEyRCw2QkFBNkIsQ0FBQyxDQUFBO0FBVXpGO0lBQUE7SUF5RkEsQ0FBQztJQWpHRDtRQUFDLGdCQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUU7WUFDbkIsUUFBUSxFQUFFLFlBQVk7WUFDdEIsV0FBVyxFQUFFLHNCQUFzQjtZQUNuQyxTQUFTLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztZQUNoQyxVQUFVLEVBQUUsQ0FBQywwQkFBaUIsQ0FBQztZQUMvQixTQUFTLEVBQUUsQ0FBQyxtQkFBVyxFQUFFLG9CQUFZLEVBQUUsdUJBQWUsQ0FBQztTQUMxRCxDQUFDOztzQkFBQTtJQTBGRixxQkFBQztBQUFELENBekZBLEFBeUZDLElBQUE7QUF6Rlksc0JBQWMsaUJBeUYxQixDQUFBIiwiZmlsZSI6ImRhc2hib2FyZC9jb21wYW55L3NhbGVzLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIsIFJPVVRFUl9ESVJFQ1RJVkVTIH0gICAgZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcblxuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uLy4uL3NoYXJlZC90eXBlcy91c2VyJ1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UsIEFkbWluU2VydmljZSwgVXNlckRhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL3NlcnZpY2VzL2luZGV4JztcblxuQENvbXBvbmVudCh7XG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICBzZWxlY3RvcjogJ3llYWgtc2FsZXMnLFxuICAgIHRlbXBsYXRlVXJsOiAnc2FsZXMuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWydjb21wYW55LnN0eWxlLmNzcyddLFxuICAgIGRpcmVjdGl2ZXM6IFtST1VURVJfRElSRUNUSVZFU10sXG4gICAgcHJvdmlkZXJzOiBbQXV0aFNlcnZpY2UsIEFkbWluU2VydmljZSwgVXNlckRhdGFTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBTYWxlc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgLy8gcHJpdmF0ZSBjdXJyZW50VXNlciA9IHt9O1xuICAgIC8vIHByaXZhdGUgdXNlckRhdGFMaXN0ID0ge307XG4gICAgLy8gcHJpdmF0ZSBhcnJheU9mVXNlcnNLZXlzID0gW107XG4gICAgLy8gcHJpdmF0ZSBzZWxlY3RlZFVzZXJJZDogc3RyaW5nO1xuICAgIC8vIHByaXZhdGUgc2VsZWN0ZWRVc2VyID0ge307XG5cbiAgICAvLyBwcml2YXRlIHN0dWRlbnRzTGlzdCA9IFtdO1xuICAgIC8vIHByaXZhdGUgYWR2aXNvcnNMaXN0ID0gW107XG4gICAgLy8gcHJpdmF0ZSBhZG1pbnNMaXN0ID0gW107XG5cbiAgICAvLyBjb25zdHJ1Y3RvcihcbiAgICAvLyAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcbiAgICAvLyAgICAgcHJpdmF0ZSBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UsXG4gICAgLy8gICAgIHByaXZhdGUgYWRtaW5TZXJ2aWNlOiBBZG1pblNlcnZpY2UsXG4gICAgLy8gICAgIHByaXZhdGUgdXNlckRhdGFTZXJ2aWNlOiBVc2VyRGF0YVNlcnZpY2VcbiAgICAvLyApIHsgfVxuXG4gICAgLy8gZ2V0VXNlcigpIHtcbiAgICAvLyAgICAgdGhpcy5hdXRoU2VydmljZS5nZXRDdXJyZW50VXNlcihKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50X3VzZXInKSkuX2lkKVxuICAgIC8vICAgICAgICAgLnN1YnNjcmliZShcbiAgICAvLyAgICAgICAgIHVzZXIgPT4ge1xuICAgIC8vICAgICAgICAgICAgIHRoaXMuY3VycmVudFVzZXIgPSB1c2VyXG4gICAgLy8gICAgICAgICB9LFxuICAgIC8vICAgICAgICAgZXJyb3IgPT4ge1xuICAgIC8vICAgICAgICAgICAgIHRoaXMuYXV0aFNlcnZpY2UubG9nVXNlck91dCgpO1xuICAgIC8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKDxhbnk+ZXJyb3IpO1xuICAgIC8vICAgICAgICAgfSk7XG4gICAgLy8gfVxuXG4gICAgLy8gZ2V0VXNlcnMoKSB7XG4gICAgLy8gICAgIHRoaXMuYWRtaW5TZXJ2aWNlLmdldEFsbFVzZXJzKClcbiAgICAvLyAgICAgICAgIC5zdWJzY3JpYmUoXG4gICAgLy8gICAgICAgICB1c2VycyA9PiB7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coJ0FsbCBVc2VyczogJywgdXNlcnMpO1xuICAgIC8vICAgICAgICAgICAgIHRoaXMudXNlckRhdGFMaXN0ID0gdXNlcnM7XG4gICAgLy8gICAgICAgICAgICAgdGhpcy5hcnJheU9mVXNlcnNLZXlzID0gT2JqZWN0LmtleXModXNlcnMpO1xuICAgIC8vICAgICAgICAgfSxcbiAgICAvLyAgICAgICAgIGVycm9yID0+IHtcbiAgICAvLyAgICAgICAgICAgICB0aGlzLmF1dGhTZXJ2aWNlLmxvZ1VzZXJPdXQoKTtcbiAgICAvLyAgICAgICAgICAgICBjb25zb2xlLmxvZyg8YW55PmVycm9yKVxuICAgIC8vICAgICAgICAgfSk7XG4gICAgLy8gfVxuXG4gICAgLy8gc2hvd1N1bW1hcnkoKSB7XG4gICAgLy8gICAgIHRoaXMuc3R1ZGVudHNMaXN0ID0gW107XG4gICAgLy8gICAgIHRoaXMuYWR2aXNvcnNMaXN0ID0gW107XG4gICAgLy8gICAgIHRoaXMuYWRtaW5zTGlzdCA9IFtdO1xuICAgIC8vICAgICB0aGlzLmFycmF5T2ZVc2Vyc0tleXMuZm9yRWFjaCh1c2VyS2V5ID0+IHtcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJLZXksIHRoaXMudXNlckRhdGFMaXN0W3VzZXJLZXldKTtcbiAgICAvLyAgICAgICAgIHN3aXRjaCAodGhpcy51c2VyRGF0YUxpc3RbdXNlcktleV0ucm9sZSkge1xuICAgIC8vICAgICAgICAgICAgIGNhc2UgJ3N0dWRlbnQnOlxuICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLnN0dWRlbnRzTGlzdC5wdXNoKHRoaXMudXNlckRhdGFMaXN0W3VzZXJLZXldKVxuICAgIC8vICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAvLyAgICAgICAgICAgICBjYXNlICdhZHZpc29yJzpcbiAgICAvLyAgICAgICAgICAgICAgICAgdGhpcy5hZHZpc29yc0xpc3QucHVzaCh0aGlzLnVzZXJEYXRhTGlzdFt1c2VyS2V5XSlcbiAgICAvLyAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgLy8gICAgICAgICAgICAgY2FzZSAnYWRtaW4nOlxuICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLmFkbWluc0xpc3QucHVzaCh0aGlzLnVzZXJEYXRhTGlzdFt1c2VyS2V5XSlcbiAgICAvLyAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgLy8gICAgICAgICB9XG4gICAgLy8gICAgIH0pXG4gICAgLy8gICAgIHJldHVybiBgVG90YWw6ICR7dGhpcy5hcnJheU9mVXNlcnNLZXlzLmxlbmd0aH0gdXNlcnMgKCR7dGhpcy5zdHVkZW50c0xpc3QubGVuZ3RofSBzdHVkZW50cywgJHt0aGlzLmFkdmlzb3JzTGlzdC5sZW5ndGh9IGFkdmlzb3JzLCAke3RoaXMuYWRtaW5zTGlzdC5sZW5ndGh9IGFkbWlucylgXG4gICAgLy8gfVxuXG4gICAgLy8gcmVuZGVyTExUKHVuaXgpIHtcbiAgICAvLyAgICAgcmV0dXJuIG1vbWVudCh1bml4KS5mb3JtYXQoJ0xMTCcpO1xuICAgIC8vIH1cblxuICAgIC8vIGdldFNpbmdsZVVzZXIodXNlcklkOiBzdHJpbmcpIHtcbiAgICAvLyAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZCA9IHVzZXJJZDtcbiAgICAvLyAgICAgdGhpcy51c2VyRGF0YVNlcnZpY2UuZ2V0U2luZ2xlVXNlcih1c2VySWQpXG4gICAgLy8gICAgICAgICAuc3Vic2NyaWJlKFxuICAgIC8vICAgICAgICAgdXNlciA9PiB7XG4gICAgLy8gICAgICAgICAgICAgaWYgKHVzZXIuX2lkID09IHRoaXMuc2VsZWN0ZWRVc2VySWQpIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1NpbmdsZSBVc2VyOiAnLCB1c2VyKTtcbiAgICAvLyAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXIgPSB1c2VyO1xuICAgIC8vICAgICAgICAgICAgIH1cbiAgICAvLyAgICAgICAgIH0sXG4gICAgLy8gICAgICAgICBlcnJvciA9PiB7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coPGFueT5lcnJvcilcbiAgICAvLyAgICAgICAgIH0pO1xuICAgIC8vIH1cblxuXG4gICAgLy8gbmdPbkluaXQoKSB7XG4gICAgLy8gICAgIHRoaXMuY3VycmVudFVzZXIgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50X3VzZXInKSk7XG4gICAgLy8gICAgIHRoaXMuZ2V0VXNlcigpO1xuICAgIC8vIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
