"use strict";var __decorate=this&&this.__decorate||function(e,t,o,r){var i,c=arguments.length,n=c<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(n=(c<3?i(n):c>3?i(t,o,n):i(t,o))||n);return c>3&&n&&Object.defineProperty(t,o,n),n},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),router_1=require("@angular/router"),auth_service_1=require("../shared/services/auth.service"),notification_service_1=require("../shared/services/notification.service"),socket_service_1=require("../shared/services/socket.service"),DashboardComponent=function(){function e(e,t,o,r){this.authService=e,this.router=t,this.socket=o,this.noticeService=r,this.profileToggled=!1,this.inboxToggled=!1}return e.prototype.checkMenuStyle=function(e){this.currentSession=e},e.prototype.logout=function(){this.authService.logUserOut()},e.prototype.getUser=function(){var e=this;this.authService.getCurrentUser(JSON.parse(localStorage.getItem("current_user"))._id).subscribe(function(t){e.currentUserRole=t.role,e.currentUser=t},function(t){e.authService.logUserOut(),console.log(t)})},e.prototype.getNotification=function(e){var t=this;this.noticeService.getThree().subscribe(function(o){console.log("notifications",o),t.notifications=o,e()},function(t){console.log(t),e()})},e.prototype.ngOnInit=function(){this.currentUser=JSON.parse(localStorage.getItem("current_user")),this.getUser();var e=this;this.getNotification(function(){e.socket.syncById("notification",e.currentUser._id,function(e){console.log("got notification",e)})})},e.prototype.ngOnDestroy=function(){this.socket.unsyncById("notification",this.currentUser._id)},e=__decorate([core_1.Component({moduleId:module.id,selector:"yeah-dashboard",templateUrl:"dashboard.component.html",directives:[router_1.ROUTER_DIRECTIVES],providers:[auth_service_1.AuthService,socket_service_1.SocketService,notification_service_1.NotificationService],styleUrls:["dashboard.style.css"]}),__metadata("design:paramtypes",[auth_service_1.AuthService,router_1.Router,socket_service_1.SocketService,notification_service_1.NotificationService])],e)}();exports.DashboardComponent=DashboardComponent;
//# sourceMappingURL=data:application/json;base64,
