"use strict";var __decorate=this&&this.__decorate||function(e,t,r,o){var a,c=arguments.length,i=c<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var n=e.length-1;n>=0;n--)(a=e[n])&&(i=(c<3?a(i):c>3?a(t,r,i):a(t,r))||i);return c>3&&i&&Object.defineProperty(t,r,i),i},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),router_1=require("@angular/router"),auth_service_1=require("../shared/services/auth.service"),DashboardComponent=function(){function e(e,t){this.authService=e,this.router=t,this.profileToggled=!1,this.inboxToggled=!1}return e.prototype.checkMenuStyle=function(e){this.currentSession=e},e.prototype.logout=function(){this.authService.logUserOut()},e=__decorate([core_1.Component({moduleId:module.id,selector:"yeah-dashboard",templateUrl:"dashboard.component.html",directives:[router_1.ROUTER_DIRECTIVES],providers:[auth_service_1.AuthService],styleUrls:["dashboard.style.css"]}),__metadata("design:paramtypes",[auth_service_1.AuthService,router_1.Router])],e)}();exports.DashboardComponent=DashboardComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmpzIiwiZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOlsiX19kZWNvcmF0ZSIsInRoaXMiLCJkZWNvcmF0b3JzIiwidGFyZ2V0Iiwia2V5IiwiZGVzYyIsImQiLCJjIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsIk9iamVjdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsImkiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fbWV0YWRhdGEiLCJrIiwidiIsIm1ldGFkYXRhIiwiY29yZV8xIiwicmVxdWlyZSIsInJvdXRlcl8xIiwiYXV0aF9zZXJ2aWNlXzEiLCJEYXNoYm9hcmRDb21wb25lbnQiLCJhdXRoU2VydmljZSIsInJvdXRlciIsInByb2ZpbGVUb2dnbGVkIiwiaW5ib3hUb2dnbGVkIiwicHJvdG90eXBlIiwiY2hlY2tNZW51U3R5bGUiLCJpdGVtIiwiY3VycmVudFNlc3Npb24iLCJsb2dvdXQiLCJsb2dVc2VyT3V0IiwiQ29tcG9uZW50IiwibW9kdWxlSWQiLCJtb2R1bGUiLCJpZCIsInNlbGVjdG9yIiwidGVtcGxhdGVVcmwiLCJkaXJlY3RpdmVzIiwiUk9VVEVSX0RJUkVDVElWRVMiLCJwcm92aWRlcnMiLCJBdXRoU2VydmljZSIsInN0eWxlVXJscyIsIlJvdXRlciIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFlBQ0EsSUFBSUEsWUFBY0MsTUFBUUEsS0FBS0QsWUFBZSxTQUFVRSxFQUFZQyxFQUFRQyxFQUFLQyxHQUM3RSxHQUEySEMsR0FBdkhDLEVBQUlDLFVBQVVDLE9BQVFDLEVBQUlILEVBQUksRUFBSUosRUFBa0IsT0FBVEUsRUFBZ0JBLEVBQU9NLE9BQU9DLHlCQUF5QlQsRUFBUUMsR0FBT0MsQ0FDckgsSUFBdUIsZ0JBQVpRLFVBQW9ELGtCQUFyQkEsU0FBUUMsU0FBeUJKLEVBQUlHLFFBQVFDLFNBQVNaLEVBQVlDLEVBQVFDLEVBQUtDLE9BQ3BILEtBQUssR0FBSVUsR0FBSWIsRUFBV08sT0FBUyxFQUFHTSxHQUFLLEVBQUdBLEtBQVNULEVBQUlKLEVBQVdhLE1BQUlMLEdBQUtILEVBQUksRUFBSUQsRUFBRUksR0FBS0gsRUFBSSxFQUFJRCxFQUFFSCxFQUFRQyxFQUFLTSxHQUFLSixFQUFFSCxFQUFRQyxLQUFTTSxFQUNoSixPQUFPSCxHQUFJLEdBQUtHLEdBQUtDLE9BQU9LLGVBQWViLEVBQVFDLEVBQUtNLEdBQUlBLEdBRTVETyxXQUFjaEIsTUFBUUEsS0FBS2dCLFlBQWUsU0FBVUMsRUFBR0MsR0FDdkQsR0FBdUIsZ0JBQVpOLFVBQW9ELGtCQUFyQkEsU0FBUU8sU0FBeUIsTUFBT1AsU0FBUU8sU0FBU0YsRUFBR0MsSUNSMUdFLE9BQUFDLFFBQWtDLGlCQUNsQ0MsU0FBQUQsUUFBMEMsbUJBRTFDRSxlQUFBRixRQUE0QixtQ0FVNUJHLG1CQUFBLFdBTUksUUFBQUEsR0FDWUMsRUFDQUMsR0FEQTFCLEtBQUF5QixZQUFBQSxFQUNBekIsS0FBQTBCLE9BQUFBLEVBTloxQixLQUFBMkIsZ0JBQTBCLEVBQzFCM0IsS0FBQTRCLGNBQXdCLEVBaUI1QixNQVRJSixHQUFBSyxVQUFBQyxlQUFBLFNBQWVDLEdBQ1gvQixLQUFLZ0MsZUFBaUJELEdBRzFCUCxFQUFBSyxVQUFBSSxPQUFBLFdBR0lqQyxLQUFLeUIsWUFBWVMsY0ExQnpCVixFQUFBekIsWUFBQ3FCLE9BQUFlLFdBQ0dDLFNBQVVDLE9BQU9DLEdBQ2pCQyxTQUFVLGlCQUNWQyxZQUFhLDJCQUNiQyxZQUFhbkIsU0FBQW9CLG1CQUNiQyxXQUFZcEIsZUFBQXFCLGFBQ1pDLFdBQVkseUJEMkJSN0IsV0FBVyxxQkFBc0JPLGVBQWVxQixZQUFhdEIsU0FBU3dCLFVBQ3ZFdEIsS0MxQk11QixTQUFBdkIsbUJBQWtCQSIsImZpbGUiOiJkYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xudmFyIF9fbWV0YWRhdGEgPSAodGhpcyAmJiB0aGlzLl9fbWV0YWRhdGEpIHx8IGZ1bmN0aW9uIChrLCB2KSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKGssIHYpO1xufTtcbnZhciBjb3JlXzEgPSByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyk7XG52YXIgcm91dGVyXzEgPSByZXF1aXJlKCdAYW5ndWxhci9yb3V0ZXInKTtcbnZhciBhdXRoX3NlcnZpY2VfMSA9IHJlcXVpcmUoJy4uL3NoYXJlZC9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UnKTtcbnZhciBEYXNoYm9hcmRDb21wb25lbnQgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERhc2hib2FyZENvbXBvbmVudChhdXRoU2VydmljZSwgcm91dGVyKSB7XG4gICAgICAgIHRoaXMuYXV0aFNlcnZpY2UgPSBhdXRoU2VydmljZTtcbiAgICAgICAgdGhpcy5yb3V0ZXIgPSByb3V0ZXI7XG4gICAgICAgIC8vIHNlcnZlIGZvciB0aGUgdHdvIGRyb3Bkb3duIGxpc3QgaW4gdG9wLXJpZ2h0IG9mIHRoZSBuYXZiYXJcbiAgICAgICAgdGhpcy5wcm9maWxlVG9nZ2xlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmluYm94VG9nZ2xlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBEYXNoYm9hcmRDb21wb25lbnQucHJvdG90eXBlLmNoZWNrTWVudVN0eWxlID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5jdXJyZW50U2Vzc2lvbiA9IGl0ZW07XG4gICAgfTtcbiAgICBEYXNoYm9hcmRDb21wb25lbnQucHJvdG90eXBlLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gdGhlIHNlcnZpY2Ugd2lsbCBkZWxldGUgdXNlciBkYXRhIGFuZCB0b2tlbiBpbiBsb2NhbFN0b3JhZ2VcbiAgICAgICAgLy8gYW5kIGJyaW5nIHVzZXIgb3V0IG9mIHRoZSBkYXNoYm9hcmRcbiAgICAgICAgdGhpcy5hdXRoU2VydmljZS5sb2dVc2VyT3V0KCk7XG4gICAgfTtcbiAgICBEYXNoYm9hcmRDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgY29yZV8xLkNvbXBvbmVudCh7XG4gICAgICAgICAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxuICAgICAgICAgICAgc2VsZWN0b3I6ICd5ZWFoLWRhc2hib2FyZCcsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2Rhc2hib2FyZC5jb21wb25lbnQuaHRtbCcsXG4gICAgICAgICAgICBkaXJlY3RpdmVzOiBbcm91dGVyXzEuUk9VVEVSX0RJUkVDVElWRVNdLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbYXV0aF9zZXJ2aWNlXzEuQXV0aFNlcnZpY2VdLFxuICAgICAgICAgICAgc3R5bGVVcmxzOiBbJ2Rhc2hib2FyZC5zdHlsZS5jc3MnXVxuICAgICAgICB9KSwgXG4gICAgICAgIF9fbWV0YWRhdGEoJ2Rlc2lnbjpwYXJhbXR5cGVzJywgW2F1dGhfc2VydmljZV8xLkF1dGhTZXJ2aWNlLCByb3V0ZXJfMS5Sb3V0ZXJdKVxuICAgIF0sIERhc2hib2FyZENvbXBvbmVudCk7XG4gICAgcmV0dXJuIERhc2hib2FyZENvbXBvbmVudDtcbn0oKSk7XG5leHBvcnRzLkRhc2hib2FyZENvbXBvbmVudCA9IERhc2hib2FyZENvbXBvbmVudDtcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBST1VURVJfRElSRUNUSVZFUywgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9zaGFyZWQvc2VydmljZXMvYXV0aC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICBzZWxlY3RvcjogJ3llYWgtZGFzaGJvYXJkJyxcbiAgICB0ZW1wbGF0ZVVybDogJ2Rhc2hib2FyZC5jb21wb25lbnQuaHRtbCcsXG4gICAgZGlyZWN0aXZlczogW1JPVVRFUl9ESVJFQ1RJVkVTXSxcbiAgICBwcm92aWRlcnM6IFtBdXRoU2VydmljZV0sXG4gICAgc3R5bGVVcmxzOiBbJ2Rhc2hib2FyZC5zdHlsZS5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRDb21wb25lbnR7XG4gICAgLy8gc2VydmUgZm9yIHRoZSB0d28gZHJvcGRvd24gbGlzdCBpbiB0b3AtcmlnaHQgb2YgdGhlIG5hdmJhclxuICAgIHByb2ZpbGVUb2dnbGVkOiBib29sZWFuID0gZmFsc2U7XG4gICAgaW5ib3hUb2dnbGVkOiBib29sZWFuID0gZmFsc2U7XG4gICAgY3VycmVudFNlc3Npb246IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlclxuICAgICl7fVxuXG4gICAgY2hlY2tNZW51U3R5bGUoaXRlbTogc3RyaW5nKXtcbiAgICAgICAgdGhpcy5jdXJyZW50U2Vzc2lvbiA9IGl0ZW07XG4gICAgfVxuXG4gICAgbG9nb3V0KCl7XG4gICAgICAgIC8vIHRoZSBzZXJ2aWNlIHdpbGwgZGVsZXRlIHVzZXIgZGF0YSBhbmQgdG9rZW4gaW4gbG9jYWxTdG9yYWdlXG4gICAgICAgIC8vIGFuZCBicmluZyB1c2VyIG91dCBvZiB0aGUgZGFzaGJvYXJkXG4gICAgICAgIHRoaXMuYXV0aFNlcnZpY2UubG9nVXNlck91dCgpXG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
