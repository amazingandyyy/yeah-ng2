"use strict";var __decorate=this&&this.__decorate||function(e,t,r,o){var n,c=arguments.length,u=c<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(u=(c<3?n(u):c>3?n(t,r,u):n(t,r))||u);return c>3&&u&&Object.defineProperty(t,r,u),u},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),router_1=require("@angular/router"),moment=require("moment"),auth_service_1=require("../../shared/services/auth.service"),AccountComponent=function(){function e(e,t){this.router=e,this.authService=t,this.currentUser={}}return e.prototype.generateTime=function(e){return moment(e).format("LLL")},e.prototype.generateDate=function(e){return moment(e).format("LL")},e.prototype.getUser=function(){var e=this;this.authService.getCurrentUser(JSON.parse(localStorage.getItem("current_user"))._id).subscribe(function(t){return e.currentUser=t},function(t){e.authService.logUserOut(),console.log(t)})},e.prototype.ngOnInit=function(){this.currentUser=JSON.parse(localStorage.getItem("current_user")),this.getUser()},e=__decorate([core_1.Component({moduleId:module.id,selector:"yeah-account",templateUrl:"account.component.html",styleUrls:["account.style.css"],providers:[auth_service_1.AuthService]}),__metadata("design:paramtypes",[router_1.Router,auth_service_1.AuthService])],e)}();exports.AccountComponent=AccountComponent;
//# sourceMappingURL=data:application/json;base64,
