"use strict";var __decorate=this&&this.__decorate||function(e,t,r,o){var n,c=arguments.length,a=c<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var i=e.length-1;i>=0;i--)(n=e[i])&&(a=(c<3?n(a):c>3?n(t,r,a):n(t,r))||a);return c>3&&a&&Object.defineProperty(t,r,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),router_1=require("@angular/router"),auth_service_1=require("../shared/services/auth.service"),AuthAdminComponent=function(){function e(e,t){this.authService=e,this.router=t}return e.prototype.onSubmit=function(e){console.log("check"),console.log("auth: ",e)},e.prototype.ngOnInit=function(){},e=__decorate([core_1.Component({moduleId:module.id,selector:"auth-admin",templateUrl:"admin.component.html",providers:[auth_service_1.AuthService]}),__metadata("design:paramtypes",[auth_service_1.AuthService,router_1.Router])],e)}();exports.AuthAdminComponent=AuthAdminComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgvYWRtaW4uY29tcG9uZW50LmpzIiwiYXV0aC9hZG1pbi5jb21wb25lbnQudHMiXSwibmFtZXMiOlsiX19kZWNvcmF0ZSIsInRoaXMiLCJkZWNvcmF0b3JzIiwidGFyZ2V0Iiwia2V5IiwiZGVzYyIsImQiLCJjIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsIk9iamVjdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsImkiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fbWV0YWRhdGEiLCJrIiwidiIsIm1ldGFkYXRhIiwiY29yZV8xIiwicmVxdWlyZSIsInJvdXRlcl8xIiwiYXV0aF9zZXJ2aWNlXzEiLCJBdXRoQWRtaW5Db21wb25lbnQiLCJhdXRoU2VydmljZSIsInJvdXRlciIsInByb3RvdHlwZSIsIm9uU3VibWl0IiwiYXV0aCIsImNvbnNvbGUiLCJsb2ciLCJuZ09uSW5pdCIsIkNvbXBvbmVudCIsIm1vZHVsZUlkIiwibW9kdWxlIiwiaWQiLCJzZWxlY3RvciIsInRlbXBsYXRlVXJsIiwicHJvdmlkZXJzIiwiQXV0aFNlcnZpY2UiLCJSb3V0ZXIiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUNBLElBQUlBLFlBQWNDLE1BQVFBLEtBQUtELFlBQWUsU0FBVUUsRUFBWUMsRUFBUUMsRUFBS0MsR0FDN0UsR0FBMkhDLEdBQXZIQyxFQUFJQyxVQUFVQyxPQUFRQyxFQUFJSCxFQUFJLEVBQUlKLEVBQWtCLE9BQVRFLEVBQWdCQSxFQUFPTSxPQUFPQyx5QkFBeUJULEVBQVFDLEdBQU9DLENBQ3JILElBQXVCLGdCQUFaUSxVQUFvRCxrQkFBckJBLFNBQVFDLFNBQXlCSixFQUFJRyxRQUFRQyxTQUFTWixFQUFZQyxFQUFRQyxFQUFLQyxPQUNwSCxLQUFLLEdBQUlVLEdBQUliLEVBQVdPLE9BQVMsRUFBR00sR0FBSyxFQUFHQSxLQUFTVCxFQUFJSixFQUFXYSxNQUFJTCxHQUFLSCxFQUFJLEVBQUlELEVBQUVJLEdBQUtILEVBQUksRUFBSUQsRUFBRUgsRUFBUUMsRUFBS00sR0FBS0osRUFBRUgsRUFBUUMsS0FBU00sRUFDaEosT0FBT0gsR0FBSSxHQUFLRyxHQUFLQyxPQUFPSyxlQUFlYixFQUFRQyxFQUFLTSxHQUFJQSxHQUU1RE8sV0FBY2hCLE1BQVFBLEtBQUtnQixZQUFlLFNBQVVDLEVBQUdDLEdBQ3ZELEdBQXVCLGdCQUFaTixVQUFvRCxrQkFBckJBLFNBQVFPLFNBQXlCLE1BQU9QLFNBQVFPLFNBQVNGLEVBQUdDLElDUjFHRSxPQUFBQyxRQUFrQyxpQkFFbENDLFNBQUFELFFBQXVCLG1CQUV2QkUsZUFBQUYsUUFBNEIsbUNBUzVCRyxtQkFBQSxXQUNJLFFBQUFBLEdBQW9CQyxFQUNSQyxHQURRMUIsS0FBQXlCLFlBQUFBLEVBQ1J6QixLQUFBMEIsT0FBQUEsRUF1QmhCLE1BckJJRixHQUFBRyxVQUFBQyxTQUFBLFNBQVNDLEdBQ0xDLFFBQVFDLElBQUksU0FDWkQsUUFBUUMsSUFBSSxTQUFVRixJQWlCMUJMLEVBQUFHLFVBQUFLLFNBQUEsYUE3QkpSLEVBQUF6QixZQUFDcUIsT0FBQWEsV0FDR0MsU0FBVUMsT0FBT0MsR0FDakJDLFNBQVUsYUFDVkMsWUFBYSx1QkFDYkMsV0FBWWhCLGVBQUFpQixlRCtCUnhCLFdBQVcscUJBQXNCTyxlQUFlaUIsWUFBYWxCLFNBQVNtQixVQUN2RWpCLEtDOUJNa0IsU0FBQWxCLG1CQUFrQkEiLCJmaWxlIjoiYXV0aC9hZG1pbi5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbnZhciBfX21ldGFkYXRhID0gKHRoaXMgJiYgdGhpcy5fX21ldGFkYXRhKSB8fCBmdW5jdGlvbiAoaywgdikge1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShrLCB2KTtcbn07XG52YXIgY29yZV8xID0gcmVxdWlyZSgnQGFuZ3VsYXIvY29yZScpO1xudmFyIHJvdXRlcl8xID0gcmVxdWlyZSgnQGFuZ3VsYXIvcm91dGVyJyk7XG52YXIgYXV0aF9zZXJ2aWNlXzEgPSByZXF1aXJlKCcuLi9zaGFyZWQvc2VydmljZXMvYXV0aC5zZXJ2aWNlJyk7XG52YXIgQXV0aEFkbWluQ29tcG9uZW50ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBdXRoQWRtaW5Db21wb25lbnQoYXV0aFNlcnZpY2UsIHJvdXRlcikge1xuICAgICAgICB0aGlzLmF1dGhTZXJ2aWNlID0gYXV0aFNlcnZpY2U7XG4gICAgICAgIHRoaXMucm91dGVyID0gcm91dGVyO1xuICAgIH1cbiAgICBBdXRoQWRtaW5Db21wb25lbnQucHJvdG90eXBlLm9uU3VibWl0ID0gZnVuY3Rpb24gKGF1dGgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2NoZWNrJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdhdXRoOiAnLCBhdXRoKTtcbiAgICAgICAgLy8gdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAvLyB0aGlzLmF1dGhTZXJ2aWNlLmxvZ1VzZXJJbihhdXRoKVxuICAgICAgICAvLyAgICAgLnN1YnNjcmliZShcbiAgICAgICAgLy8gICAgIHJlcyA9PiBoYW5kbGVSZXNwb25zZShyZXMpLFxuICAgICAgICAvLyAgICAgZXJyID0+IGNvbnNvbGUubG9nKCdlcnIgcmVzOiAnLCBlcnIpXG4gICAgICAgIC8vICAgICApXG4gICAgICAgIC8vIGZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlKHJlcykge1xuICAgICAgICAvLyAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2lkX3Rva2VuJywgSlNPTi5zdHJpbmdpZnkocmVzLnRva2VuKSk7XG4gICAgICAgIC8vICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3VycmVudF91c2VyJywgSlNPTi5zdHJpbmdpZnkocmVzLnVzZXIpKTtcbiAgICAgICAgLy8gICAgIC8vIHNlbGYucm91dGVyLm5hdmlnYXRlKFsnZGFzaGJvYXJkL3BsYW5zJ10pXG4gICAgICAgIC8vICAgICBzZWxmLnJvdXRlci5uYXZpZ2F0ZShbJ2Rhc2hib2FyZC9hY2NvdW50J10pXG4gICAgICAgIC8vIH1cbiAgICB9O1xuICAgIEF1dGhBZG1pbkNvbXBvbmVudC5wcm90b3R5cGUubmdPbkluaXQgPSBmdW5jdGlvbiAoKSB7IH07XG4gICAgQXV0aEFkbWluQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIGNvcmVfMS5Db21wb25lbnQoe1xuICAgICAgICAgICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnYXV0aC1hZG1pbicsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2FkbWluLmNvbXBvbmVudC5odG1sJyxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW2F1dGhfc2VydmljZV8xLkF1dGhTZXJ2aWNlXVxuICAgICAgICB9KSwgXG4gICAgICAgIF9fbWV0YWRhdGEoJ2Rlc2lnbjpwYXJhbXR5cGVzJywgW2F1dGhfc2VydmljZV8xLkF1dGhTZXJ2aWNlLCByb3V0ZXJfMS5Sb3V0ZXJdKVxuICAgIF0sIEF1dGhBZG1pbkNvbXBvbmVudCk7XG4gICAgcmV0dXJuIEF1dGhBZG1pbkNvbXBvbmVudDtcbn0oKSk7XG5leHBvcnRzLkF1dGhBZG1pbkNvbXBvbmVudCA9IEF1dGhBZG1pbkNvbXBvbmVudDtcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4uL3NoYXJlZC9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXV0aCB9IGZyb20gJy4uL3NoYXJlZC90eXBlcy9hdXRoJztcblxuQENvbXBvbmVudCh7XG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICBzZWxlY3RvcjogJ2F1dGgtYWRtaW4nLFxuICAgIHRlbXBsYXRlVXJsOiAnYWRtaW4uY29tcG9uZW50Lmh0bWwnLFxuICAgIHByb3ZpZGVyczogW0F1dGhTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBBdXRoQWRtaW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXR7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXIpIHsgfVxuXG4gICAgb25TdWJtaXQoYXV0aDogQXV0aCkge1xuICAgICAgICBjb25zb2xlLmxvZygnY2hlY2snKTtcbiAgICAgICAgY29uc29sZS5sb2coJ2F1dGg6ICcsIGF1dGgpO1xuICAgICAgICBcbiAgICAgICAgLy8gdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAvLyB0aGlzLmF1dGhTZXJ2aWNlLmxvZ1VzZXJJbihhdXRoKVxuICAgICAgICAvLyAgICAgLnN1YnNjcmliZShcbiAgICAgICAgLy8gICAgIHJlcyA9PiBoYW5kbGVSZXNwb25zZShyZXMpLFxuICAgICAgICAvLyAgICAgZXJyID0+IGNvbnNvbGUubG9nKCdlcnIgcmVzOiAnLCBlcnIpXG4gICAgICAgIC8vICAgICApXG5cbiAgICAgICAgLy8gZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2UocmVzKSB7XG4gICAgICAgIC8vICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnaWRfdG9rZW4nLCBKU09OLnN0cmluZ2lmeShyZXMudG9rZW4pKTtcbiAgICAgICAgLy8gICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjdXJyZW50X3VzZXInLCBKU09OLnN0cmluZ2lmeShyZXMudXNlcikpO1xuICAgICAgICAvLyAgICAgLy8gc2VsZi5yb3V0ZXIubmF2aWdhdGUoWydkYXNoYm9hcmQvcGxhbnMnXSlcbiAgICAgICAgLy8gICAgIHNlbGYucm91dGVyLm5hdmlnYXRlKFsnZGFzaGJvYXJkL2FjY291bnQnXSlcbiAgICAgICAgLy8gfVxuICAgIH1cblxuICAgIG5nT25Jbml0KCkgeyB9XG5cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
