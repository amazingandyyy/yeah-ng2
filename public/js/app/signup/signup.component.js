"use strict";var __decorate=this&&this.__decorate||function(e,t,o,r){var s,i=arguments.length,n=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var c=e.length-1;c>=0;c--)(s=e[c])&&(n=(i<3?s(n):i>3?s(t,o,n):s(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),router_1=require("@angular/router"),signup_service_1=require("../shared/services/signup.service"),SignupComponent=function(){function e(e,t,o){this.router=e,this.route=t,this.signupService=o}return e.prototype.goToForm=function(e){this.confirmPassword=null,this.pwMsgSuccess=!1,this.pwMsgFail=!1,this.router.navigate(["/signup",e])},e.prototype.checkStyle=function(e){return this.selectedRole===e},e.prototype.checkPw=function(e,t){this.pwMsgSuccess=!1,this.pwMsgFail=!1},e.prototype.onSubmit=function(e){function t(e){console.log(e),localStorage.setItem("id_token",JSON.stringify(e.token)),localStorage.setItem("current_user",JSON.stringify(e.user)),r.router.navigate(["dashboard"])}function o(e){"Conflict"===e.statusText&&(console.log("this email already exist"),console.log(e))}var r=this;e.password===this.confirmPassword&&(delete e.confirmPassword,e.role=this.selectedRole,this.signupService.signUp(e).subscribe(function(e){return t(e)},function(e){return o(e)}))},e.prototype.ngOnInit=function(){var e=this;this.selectedRole=void 0,this.route&&(this.sub=this.route.params.subscribe(function(t){switch(e.selectedRole=t.role,e.selectedRole){case"student":e.roleCh="学员";break;case"advisor":e.roleCh="顾问";break;case"admin":e.roleCh="管理员"}})),console.log("fff")},e.prototype.ngOnDestroy=function(){this.sub.unsubscribe()},e=__decorate([core_1.Component({moduleId:module.id,selector:"signup",templateUrl:"signup.component.html",styleUrls:["signup.style.css"],providers:[signup_service_1.SignupService],directives:[router_1.ROUTER_DIRECTIVES]}),__metadata("design:paramtypes",[router_1.Router,router_1.ActivatedRoute,signup_service_1.SignupService])],e)}();exports.SignupComponent=SignupComponent;
//# sourceMappingURL=data:application/json;base64,
