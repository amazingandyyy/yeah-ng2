"use strict";var __decorate=this&&this.__decorate||function(e,t,o,r){var n,i=arguments.length,s=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,r);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(s=(i<3?n(s):i>3?n(t,o,s):n(t,o))||s);return i>3&&s&&Object.defineProperty(t,o,s),s},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),router_1=require("@angular/router"),SignupComponent=function(){function e(e,t){this.router=e,this.route=t}return e.prototype.goToForm=function(e){this.router.navigate(["/signup",e])},e.prototype.checkStyle=function(e){return this.selectedRole===e},e.prototype.ngOnInit=function(){var e=this;this.selectedRole=void 0,this.route&&(this.sub=this.route.params.subscribe(function(t){switch(e.selectedRole=t.role,e.selectedRole){case"student":e.roleCh="学员";break;case"advisor":e.roleCh="顾问";break;case"admin":e.roleCh="管理员"}}))},e.prototype.ngOnDestroy=function(){this.sub.unsubscribe()},e=__decorate([core_1.Component({moduleId:module.id,selector:"signup",templateUrl:"signup.component.html",styleUrls:["signup.style.css"]}),__metadata("design:paramtypes",[router_1.Router,router_1.ActivatedRoute])],e)}();exports.SignupComponent=SignupComponent;
//# sourceMappingURL=data:application/json;base64,
