"use strict";var __decorate=this&&this.__decorate||function(e,t,o,n){var r,c=arguments.length,i=c<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(c<3?r(i):c>3?r(t,o,i):r(t,o))||i);return c>3&&i&&Object.defineProperty(t,o,i),i},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),lodash_1=require("lodash"),SocketService=function(){function e(){var e=require("socket-client");this.socket=e.connect()}return e.prototype.addEventListener=function(e){this.socket.on(e,function(e){console.log("things from socket",e)})},e.prototype.removeEventListener=function(e){this.socket.removeAllListeners(e)},e.prototype.syncById=function(e,t,o){this.socket.on(e+":save:"+t,function(e){o(e)})},e.prototype.unsyncById=function(e,t,o){this.socket.removeAllListeners(e+":save:"+t)},e.prototype.syncArray=function(e,t,o){o=o||function(){},this.socket.on(e+":save",function(e){var n=lodash_1["default"].find(t,{_id:e._id}),r=t.indexOf(n),c="created";n?(t.splice(r,1,e),c="updated"):t.push(e),o(c,e,t)}),this.socket.on(e+":remove",function(e){var n="deleted";lodash_1["default"].remove(t,{_id:e._id}),o(n,e,t)})},e.prototype.unsyncArray=function(e){this.socket.removeAllListeners(e+":save"),this.socket.removeAllListeners(e+":remove")},e=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[])],e)}();exports.SocketService=SocketService;
//# sourceMappingURL=data:application/json;base64,
