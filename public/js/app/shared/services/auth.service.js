"use strict";var __decorate=this&&this.__decorate||function(e,t,r,o){var a,n=arguments.length,s=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,o);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(n<3?a(s):n>3?a(t,r,s):a(t,r))||s);return n>3&&s&&Object.defineProperty(t,r,s),s},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),http_1=require("@angular/http"),Observable_1=require("rxjs/Observable");require("rxjs/add/observable/of"),require("rxjs/add/operator/do"),require("rxjs/add/operator/delay"),require("rxjs/add/operator/catch"),require("rxjs/add/operator/map");var AuthService=function(){function e(e){this.http=e,this.isLoggedIn=!1}return e.prototype.logUserIn=function(e){return this.http.post("/api/auth/logUserIn",e).map(this.handelResponse)["catch"](this.handelError)},e.prototype.handelResponse=function(e){var t=e.json();return this.isLoggedIn=!0,t||{}},e.prototype.handelError=function(e){return console.log("err when logUserIn @auth.service.ts"),this.isLoggedIn=!1,Observable_1.Observable["throw"](e)},e.prototype.logUserOut=function(){return localStorage.id_token=null,localStorage.current_user=null,this.isLoggedIn=!1,"logout"},e=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[http_1.Http])],e)}();exports.AuthService=AuthService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYXJlZC9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UuanMiLCJzaGFyZWQvc2VydmljZXMvYXV0aC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbIl9fZGVjb3JhdGUiLCJ0aGlzIiwiZGVjb3JhdG9ycyIsInRhcmdldCIsImtleSIsImRlc2MiLCJkIiwiYyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInIiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJSZWZsZWN0IiwiZGVjb3JhdGUiLCJpIiwiZGVmaW5lUHJvcGVydHkiLCJfX21ldGFkYXRhIiwiayIsInYiLCJtZXRhZGF0YSIsImNvcmVfMSIsInJlcXVpcmUiLCJodHRwXzEiLCJPYnNlcnZhYmxlXzEiLCJBdXRoU2VydmljZSIsImh0dHAiLCJpc0xvZ2dlZEluIiwicHJvdG90eXBlIiwibG9nVXNlckluIiwiZGF0YSIsInBvc3QiLCJtYXAiLCJoYW5kZWxSZXNwb25zZSIsImhhbmRlbEVycm9yIiwicmVzIiwianNvbiIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJPYnNlcnZhYmxlIiwibG9nVXNlck91dCIsImxvY2FsU3RvcmFnZSIsIkluamVjdGFibGUiLCJIdHRwIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFDQSxJQUFJQSxZQUFjQyxNQUFRQSxLQUFLRCxZQUFlLFNBQVVFLEVBQVlDLEVBQVFDLEVBQUtDLEdBQzdFLEdBQTJIQyxHQUF2SEMsRUFBSUMsVUFBVUMsT0FBUUMsRUFBSUgsRUFBSSxFQUFJSixFQUFrQixPQUFURSxFQUFnQkEsRUFBT00sT0FBT0MseUJBQXlCVCxFQUFRQyxHQUFPQyxDQUNySCxJQUF1QixnQkFBWlEsVUFBb0Qsa0JBQXJCQSxTQUFRQyxTQUF5QkosRUFBSUcsUUFBUUMsU0FBU1osRUFBWUMsRUFBUUMsRUFBS0MsT0FDcEgsS0FBSyxHQUFJVSxHQUFJYixFQUFXTyxPQUFTLEVBQUdNLEdBQUssRUFBR0EsS0FBU1QsRUFBSUosRUFBV2EsTUFBSUwsR0FBS0gsRUFBSSxFQUFJRCxFQUFFSSxHQUFLSCxFQUFJLEVBQUlELEVBQUVILEVBQVFDLEVBQUtNLEdBQUtKLEVBQUVILEVBQVFDLEtBQVNNLEVBQ2hKLE9BQU9ILEdBQUksR0FBS0csR0FBS0MsT0FBT0ssZUFBZWIsRUFBUUMsRUFBS00sR0FBSUEsR0FFNURPLFdBQWNoQixNQUFRQSxLQUFLZ0IsWUFBZSxTQUFVQyxFQUFHQyxHQUN2RCxHQUF1QixnQkFBWk4sVUFBb0Qsa0JBQXJCQSxTQUFRTyxTQUF5QixNQUFPUCxTQUFRTyxTQUFTRixFQUFHQyxJQ1IxR0UsT0FBQUMsUUFBMkIsaUJBQzNCQyxPQUFBRCxRQUErQixpQkFDL0JFLGFBQUFGLFFBQTJCLGtCQUUzQkEsU0FBTywwQkFDUEEsUUFBTyx3QkFDUEEsUUFBTywyQkFDUEEsUUFBTywyQkFDUEEsUUFBTyx3QkFLUCxJQUFBRyxhQUFBLFdBSUksUUFBQUEsR0FBbUJDLEdBQUF6QixLQUFBeUIsS0FBQUEsRUFIbkJ6QixLQUFBMEIsWUFBc0IsRUEyQjFCLE1BdEJJRixHQUFBRyxVQUFBQyxVQUFBLFNBQVdDLEdBQ1AsTUFBTzdCLE1BQUt5QixLQUFLSyxLQUFLLHNCQUF1QkQsR0FDeENFLElBQUkvQixLQUFLZ0MsZ0JBRFBoQyxTQUVJQSxLQUFLaUMsY0FHWlQsRUFBQUcsVUFBQUssZUFBUixTQUF1QkUsR0FDbkIsR0FBSUwsR0FBT0ssRUFBSUMsTUFFZixPQURBbkMsTUFBSzBCLFlBQWEsRUFDWEcsT0FFSEwsRUFBQUcsVUFBQU0sWUFBUixTQUFvQkcsR0FHaEIsTUFGQUMsU0FBUUMsSUFBSSx1Q0FDWnRDLEtBQUswQixZQUFhLEVBQ1hILGFBQUFnQixXQUFBaEIsU0FBaUJhLElBRTVCWixFQUFBRyxVQUFBYSxXQUFBLFdBSUksTUFIQUMsY0FBdUIsU0FBSSxLQUMzQkEsYUFBMkIsYUFBSSxLQUMvQnpDLEtBQUswQixZQUFhLEVBQ1gsVUEzQmZGLEVBQUF6QixZQUFDcUIsT0FBQXNCLGFEa0NPMUIsV0FBVyxxQkFBc0JNLE9BQU9xQixRQUN6Q25CLEtDbENNb0IsU0FBQXBCLFlBQVdBIiwiZmlsZSI6InNoYXJlZC9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbnZhciBfX21ldGFkYXRhID0gKHRoaXMgJiYgdGhpcy5fX21ldGFkYXRhKSB8fCBmdW5jdGlvbiAoaywgdikge1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShrLCB2KTtcbn07XG52YXIgY29yZV8xID0gcmVxdWlyZSgnQGFuZ3VsYXIvY29yZScpO1xudmFyIGh0dHBfMSA9IHJlcXVpcmUoJ0Bhbmd1bGFyL2h0dHAnKTtcbnZhciBPYnNlcnZhYmxlXzEgPSByZXF1aXJlKCdyeGpzL09ic2VydmFibGUnKTtcbnJlcXVpcmUoJ3J4anMvYWRkL29ic2VydmFibGUvb2YnKTtcbnJlcXVpcmUoJ3J4anMvYWRkL29wZXJhdG9yL2RvJyk7XG5yZXF1aXJlKCdyeGpzL2FkZC9vcGVyYXRvci9kZWxheScpO1xucmVxdWlyZSgncnhqcy9hZGQvb3BlcmF0b3IvY2F0Y2gnKTtcbnJlcXVpcmUoJ3J4anMvYWRkL29wZXJhdG9yL21hcCcpO1xudmFyIEF1dGhTZXJ2aWNlID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBdXRoU2VydmljZShodHRwKSB7XG4gICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7XG4gICAgICAgIHRoaXMuaXNMb2dnZWRJbiA9IGZhbHNlO1xuICAgIH1cbiAgICBBdXRoU2VydmljZS5wcm90b3R5cGUubG9nVXNlckluID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KCcvYXBpL2F1dGgvbG9nVXNlckluJywgZGF0YSlcbiAgICAgICAgICAgIC5tYXAodGhpcy5oYW5kZWxSZXNwb25zZSlcbiAgICAgICAgICAgIC5jYXRjaCh0aGlzLmhhbmRlbEVycm9yKTtcbiAgICB9O1xuICAgIEF1dGhTZXJ2aWNlLnByb3RvdHlwZS5oYW5kZWxSZXNwb25zZSA9IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgdmFyIGRhdGEgPSByZXMuanNvbigpO1xuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4gPSB0cnVlO1xuICAgICAgICByZXR1cm4gZGF0YSB8fCB7fTtcbiAgICB9O1xuICAgIEF1dGhTZXJ2aWNlLnByb3RvdHlwZS5oYW5kZWxFcnJvciA9IGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2VyciB3aGVuIGxvZ1VzZXJJbiBAYXV0aC5zZXJ2aWNlLnRzJyk7XG4gICAgICAgIHRoaXMuaXNMb2dnZWRJbiA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZV8xLk9ic2VydmFibGUudGhyb3coZXJyKTtcbiAgICB9O1xuICAgIEF1dGhTZXJ2aWNlLnByb3RvdHlwZS5sb2dVc2VyT3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBsb2NhbFN0b3JhZ2VbJ2lkX3Rva2VuJ10gPSBudWxsO1xuICAgICAgICBsb2NhbFN0b3JhZ2VbJ2N1cnJlbnRfdXNlciddID0gbnVsbDtcbiAgICAgICAgdGhpcy5pc0xvZ2dlZEluID0gZmFsc2U7XG4gICAgICAgIHJldHVybiAnbG9nb3V0JztcbiAgICB9O1xuICAgIEF1dGhTZXJ2aWNlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIGNvcmVfMS5JbmplY3RhYmxlKCksIFxuICAgICAgICBfX21ldGFkYXRhKCdkZXNpZ246cGFyYW10eXBlcycsIFtodHRwXzEuSHR0cF0pXG4gICAgXSwgQXV0aFNlcnZpY2UpO1xuICAgIHJldHVybiBBdXRoU2VydmljZTtcbn0oKSk7XG5leHBvcnRzLkF1dGhTZXJ2aWNlID0gQXV0aFNlcnZpY2U7XG4iLCJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwLCBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cbmltcG9ydCAncnhqcy9hZGQvb2JzZXJ2YWJsZS9vZic7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL2RvJztcbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvZGVsYXknO1xuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9jYXRjaCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL21hcCc7XG5cbmltcG9ydCB7IEF1dGggfSBmcm9tICcuLi90eXBlcy9hdXRoJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEF1dGhTZXJ2aWNlIHtcbiAgICBpc0xvZ2dlZEluOiBib29sZWFuID0gZmFsc2U7XG4gICAgcmVkaXJlY3RVcmw6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBodHRwOiBIdHRwKSB7IH1cblxuICAgIGxvZ1VzZXJJbiAoZGF0YTogQXV0aCk6IE9ic2VydmFibGU8QXV0aD57XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdCgnL2FwaS9hdXRoL2xvZ1VzZXJJbicsIGRhdGEpXG4gICAgICAgICAgICAubWFwKHRoaXMuaGFuZGVsUmVzcG9uc2UpXG4gICAgICAgICAgICAuY2F0Y2godGhpcy5oYW5kZWxFcnJvcilcbiAgICB9XG5cbiAgICBwcml2YXRlIGhhbmRlbFJlc3BvbnNlKHJlczogUmVzcG9uc2UpIHtcbiAgICAgICAgbGV0IGRhdGEgPSByZXMuanNvbigpXG4gICAgICAgIHRoaXMuaXNMb2dnZWRJbiA9IHRydWVcbiAgICAgICAgcmV0dXJuIGRhdGEgfHwge307XG4gICAgfVxuICAgIHByaXZhdGUgaGFuZGVsRXJyb3IoZXJyOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2VyciB3aGVuIGxvZ1VzZXJJbiBAYXV0aC5zZXJ2aWNlLnRzJylcbiAgICAgICAgdGhpcy5pc0xvZ2dlZEluID0gZmFsc2U7XG4gICAgICAgIHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycik7XG4gICAgfVxuICAgIGxvZ1VzZXJPdXQgKCkge1xuICAgICAgICBsb2NhbFN0b3JhZ2VbJ2lkX3Rva2VuJ10gPSBudWxsO1xuICAgICAgICBsb2NhbFN0b3JhZ2VbJ2N1cnJlbnRfdXNlciddID0gbnVsbDtcbiAgICAgICAgdGhpcy5pc0xvZ2dlZEluID0gZmFsc2U7XG4gICAgICAgIHJldHVybiAnbG9nb3V0JztcbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
