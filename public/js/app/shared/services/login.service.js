"use strict";var __decorate=this&&this.__decorate||function(e,t,r,o){var a,n=arguments.length,i=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(i=(n<3?a(i):n>3?a(t,r,i):a(t,r))||i);return n>3&&i&&Object.defineProperty(t,r,i),i},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),http_1=require("@angular/http"),Observable_1=require("rxjs/Observable");require("rxjs/add/observable/of"),require("rxjs/add/operator/do"),require("rxjs/add/operator/delay"),require("rxjs/add/operator/catch"),require("rxjs/add/operator/map");var LoginService=function(){function e(e){this.http=e,this.isLoggedIn=!1}return e.prototype.logUserIn=function(e){return this.http.post("/api/login",e).map(this.handelResponse)["catch"](this.handelError)},e.prototype.handelResponse=function(e){var t=e.json();return this.isLoggedIn=!0,t||{}},e.prototype.handelError=function(e){return console.log("err when logUserIn @auth.service.ts"),this.isLoggedIn=!1,Observable_1.Observable["throw"](e)},e.prototype.logUserOut=function(){return localStorage.id_token=null,localStorage.current_user=null,this.isLoggedIn=!1,"logout"},e=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[http_1.Http])],e)}();exports.LoginService=LoginService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYXJlZC9zZXJ2aWNlcy9sb2dpbi5zZXJ2aWNlLmpzIiwic2hhcmVkL3NlcnZpY2VzL2xvZ2luLnNlcnZpY2UudHMiXSwibmFtZXMiOlsiX19kZWNvcmF0ZSIsInRoaXMiLCJkZWNvcmF0b3JzIiwidGFyZ2V0Iiwia2V5IiwiZGVzYyIsImQiLCJjIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsIk9iamVjdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsImkiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fbWV0YWRhdGEiLCJrIiwidiIsIm1ldGFkYXRhIiwiY29yZV8xIiwicmVxdWlyZSIsImh0dHBfMSIsIk9ic2VydmFibGVfMSIsIkxvZ2luU2VydmljZSIsImh0dHAiLCJpc0xvZ2dlZEluIiwicHJvdG90eXBlIiwibG9nVXNlckluIiwiZGF0YSIsInBvc3QiLCJtYXAiLCJoYW5kZWxSZXNwb25zZSIsImhhbmRlbEVycm9yIiwicmVzIiwianNvbiIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJPYnNlcnZhYmxlIiwibG9nVXNlck91dCIsImxvY2FsU3RvcmFnZSIsIkluamVjdGFibGUiLCJIdHRwIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFDQSxJQUFJQSxZQUFjQyxNQUFRQSxLQUFLRCxZQUFlLFNBQVVFLEVBQVlDLEVBQVFDLEVBQUtDLEdBQzdFLEdBQTJIQyxHQUF2SEMsRUFBSUMsVUFBVUMsT0FBUUMsRUFBSUgsRUFBSSxFQUFJSixFQUFrQixPQUFURSxFQUFnQkEsRUFBT00sT0FBT0MseUJBQXlCVCxFQUFRQyxHQUFPQyxDQUNySCxJQUF1QixnQkFBWlEsVUFBb0Qsa0JBQXJCQSxTQUFRQyxTQUF5QkosRUFBSUcsUUFBUUMsU0FBU1osRUFBWUMsRUFBUUMsRUFBS0MsT0FDcEgsS0FBSyxHQUFJVSxHQUFJYixFQUFXTyxPQUFTLEVBQUdNLEdBQUssRUFBR0EsS0FBU1QsRUFBSUosRUFBV2EsTUFBSUwsR0FBS0gsRUFBSSxFQUFJRCxFQUFFSSxHQUFLSCxFQUFJLEVBQUlELEVBQUVILEVBQVFDLEVBQUtNLEdBQUtKLEVBQUVILEVBQVFDLEtBQVNNLEVBQ2hKLE9BQU9ILEdBQUksR0FBS0csR0FBS0MsT0FBT0ssZUFBZWIsRUFBUUMsRUFBS00sR0FBSUEsR0FFNURPLFdBQWNoQixNQUFRQSxLQUFLZ0IsWUFBZSxTQUFVQyxFQUFHQyxHQUN2RCxHQUF1QixnQkFBWk4sVUFBb0Qsa0JBQXJCQSxTQUFRTyxTQUF5QixNQUFPUCxTQUFRTyxTQUFTRixFQUFHQyxJQ1IxR0UsT0FBQUMsUUFBMkIsaUJBQzNCQyxPQUFBRCxRQUErQixpQkFDL0JFLGFBQUFGLFFBQTJCLGtCQUUzQkEsU0FBTywwQkFDUEEsUUFBTyx3QkFDUEEsUUFBTywyQkFDUEEsUUFBTywyQkFDUEEsUUFBTyx3QkFLUCxJQUFBRyxjQUFBLFdBSUksUUFBQUEsR0FBbUJDLEdBQUF6QixLQUFBeUIsS0FBQUEsRUFIbkJ6QixLQUFBMEIsWUFBc0IsRUE2QjFCLE1BeEJJRixHQUFBRyxVQUFBQyxVQUFBLFNBQVdDLEdBQ1AsTUFBTzdCLE1BQUt5QixLQUFLSyxLQUFLLGFBQWNELEdBQy9CRSxJQUFJL0IsS0FBS2dDLGdCQURQaEMsU0FFSUEsS0FBS2lDLGNBR1pULEVBQUFHLFVBQUFLLGVBQVIsU0FBdUJFLEdBQ25CLEdBQUlMLEdBQU9LLEVBQUlDLE1BRWYsT0FEQW5DLE1BQUswQixZQUFhLEVBQ1hHLE9BRUhMLEVBQUFHLFVBQUFNLFlBQVIsU0FBb0JHLEdBR2hCLE1BRkFDLFNBQVFDLElBQUksdUNBQ1p0QyxLQUFLMEIsWUFBYSxFQUNYSCxhQUFBZ0IsV0FBQWhCLFNBQWlCYSxJQUc1QlosRUFBQUcsVUFBQWEsV0FBQSxXQUlJLE1BSEFDLGNBQXVCLFNBQUksS0FDM0JBLGFBQTJCLGFBQUksS0FDL0J6QyxLQUFLMEIsWUFBYSxFQUNYLFVBNUJmRixFQUFBekIsWUFBQ3FCLE9BQUFzQixhRGtDTzFCLFdBQVcscUJBQXNCTSxPQUFPcUIsUUFDekNuQixLQ2xDTW9CLFNBQUFwQixhQUFZQSIsImZpbGUiOiJzaGFyZWQvc2VydmljZXMvbG9naW4uc2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xudmFyIF9fbWV0YWRhdGEgPSAodGhpcyAmJiB0aGlzLl9fbWV0YWRhdGEpIHx8IGZ1bmN0aW9uIChrLCB2KSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKGssIHYpO1xufTtcbnZhciBjb3JlXzEgPSByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyk7XG52YXIgaHR0cF8xID0gcmVxdWlyZSgnQGFuZ3VsYXIvaHR0cCcpO1xudmFyIE9ic2VydmFibGVfMSA9IHJlcXVpcmUoJ3J4anMvT2JzZXJ2YWJsZScpO1xucmVxdWlyZSgncnhqcy9hZGQvb2JzZXJ2YWJsZS9vZicpO1xucmVxdWlyZSgncnhqcy9hZGQvb3BlcmF0b3IvZG8nKTtcbnJlcXVpcmUoJ3J4anMvYWRkL29wZXJhdG9yL2RlbGF5Jyk7XG5yZXF1aXJlKCdyeGpzL2FkZC9vcGVyYXRvci9jYXRjaCcpO1xucmVxdWlyZSgncnhqcy9hZGQvb3BlcmF0b3IvbWFwJyk7XG52YXIgTG9naW5TZXJ2aWNlID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBMb2dpblNlcnZpY2UoaHR0cCkge1xuICAgICAgICB0aGlzLmh0dHAgPSBodHRwO1xuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4gPSBmYWxzZTtcbiAgICB9XG4gICAgTG9naW5TZXJ2aWNlLnByb3RvdHlwZS5sb2dVc2VySW4gPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoJy9hcGkvbG9naW4nLCBkYXRhKVxuICAgICAgICAgICAgLm1hcCh0aGlzLmhhbmRlbFJlc3BvbnNlKVxuICAgICAgICAgICAgLmNhdGNoKHRoaXMuaGFuZGVsRXJyb3IpO1xuICAgIH07XG4gICAgTG9naW5TZXJ2aWNlLnByb3RvdHlwZS5oYW5kZWxSZXNwb25zZSA9IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgdmFyIGRhdGEgPSByZXMuanNvbigpO1xuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4gPSB0cnVlO1xuICAgICAgICByZXR1cm4gZGF0YSB8fCB7fTtcbiAgICB9O1xuICAgIExvZ2luU2VydmljZS5wcm90b3R5cGUuaGFuZGVsRXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdlcnIgd2hlbiBsb2dVc2VySW4gQGF1dGguc2VydmljZS50cycpO1xuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4gPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIE9ic2VydmFibGVfMS5PYnNlcnZhYmxlLnRocm93KGVycik7XG4gICAgfTtcbiAgICBMb2dpblNlcnZpY2UucHJvdG90eXBlLmxvZ1VzZXJPdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZVsnaWRfdG9rZW4nXSA9IG51bGw7XG4gICAgICAgIGxvY2FsU3RvcmFnZVsnY3VycmVudF91c2VyJ10gPSBudWxsO1xuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4gPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuICdsb2dvdXQnO1xuICAgIH07XG4gICAgTG9naW5TZXJ2aWNlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIGNvcmVfMS5JbmplY3RhYmxlKCksIFxuICAgICAgICBfX21ldGFkYXRhKCdkZXNpZ246cGFyYW10eXBlcycsIFtodHRwXzEuSHR0cF0pXG4gICAgXSwgTG9naW5TZXJ2aWNlKTtcbiAgICByZXR1cm4gTG9naW5TZXJ2aWNlO1xufSgpKTtcbmV4cG9ydHMuTG9naW5TZXJ2aWNlID0gTG9naW5TZXJ2aWNlO1xuIiwiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cCwgUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xuXG5pbXBvcnQgJ3J4anMvYWRkL29ic2VydmFibGUvb2YnO1xuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9kbyc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL2RlbGF5JztcbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvY2F0Y2gnO1xuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9tYXAnO1xuXG5pbXBvcnQgeyBBdXRoIH0gZnJvbSAnLi4vdHlwZXMvYXV0aCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMb2dpblNlcnZpY2Uge1xuICAgIGlzTG9nZ2VkSW46IGJvb2xlYW4gPSBmYWxzZTtcbiAgICByZWRpcmVjdFVybDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGh0dHA6IEh0dHApIHsgfVxuXG4gICAgbG9nVXNlckluIChkYXRhOiBBdXRoKTogT2JzZXJ2YWJsZTxBdXRoPntcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KCcvYXBpL2xvZ2luJywgZGF0YSlcbiAgICAgICAgICAgIC5tYXAodGhpcy5oYW5kZWxSZXNwb25zZSlcbiAgICAgICAgICAgIC5jYXRjaCh0aGlzLmhhbmRlbEVycm9yKVxuICAgIH1cblxuICAgIHByaXZhdGUgaGFuZGVsUmVzcG9uc2UocmVzOiBSZXNwb25zZSkge1xuICAgICAgICBsZXQgZGF0YSA9IHJlcy5qc29uKClcbiAgICAgICAgdGhpcy5pc0xvZ2dlZEluID0gdHJ1ZVxuICAgICAgICByZXR1cm4gZGF0YSB8fCB7fTtcbiAgICB9XG4gICAgcHJpdmF0ZSBoYW5kZWxFcnJvcihlcnI6IGFueSkge1xuICAgICAgICBjb25zb2xlLmxvZygnZXJyIHdoZW4gbG9nVXNlckluIEBhdXRoLnNlcnZpY2UudHMnKVxuICAgICAgICB0aGlzLmlzTG9nZ2VkSW4gPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyKTtcbiAgICB9XG5cbiAgICBsb2dVc2VyT3V0ICgpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlWydpZF90b2tlbiddID0gbnVsbDtcbiAgICAgICAgbG9jYWxTdG9yYWdlWydjdXJyZW50X3VzZXInXSA9IG51bGw7XG4gICAgICAgIHRoaXMuaXNMb2dnZWRJbiA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gJ2xvZ291dCc7XG4gICAgfVxuICAgIFxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
